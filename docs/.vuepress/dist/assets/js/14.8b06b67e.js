(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{365:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" docker")]),t._v(" "),s("h2",{attrs:{id:"docker一些常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker一些常用命令"}},[t._v("#")]),t._v(" docker一些常用命令")]),t._v(" "),s("ul",[s("li",[t._v("启动docker   service docker start")]),t._v(" "),s("li",[t._v("查看镜像列表  docker images, docker images -a")]),t._v(" "),s("li",[t._v("查看运行中的容器列表 docker ps")]),t._v(" "),s("li",[t._v("查看所有的容器列表  docker ps -a")]),t._v(" "),s("li",[t._v("删除镜像列表 docker rmi xxxx")]),t._v(" "),s("li",[t._v("删除容器列表 docker rm xxxx")]),t._v(" "),s("li",[t._v("停止容器  docker stop xxxx")]),t._v(" "),s("li",[t._v("启动容器 docker start xxxx")]),t._v(" "),s("li",[t._v("创建镜像 docker build -t vuenginxcontainer .")]),t._v(" "),s("li",[t._v("创建容器 docker run -d --name vueApp -p 9000:80 vuenginxcontainer")])]),t._v(" "),s("h2",{attrs:{id:"docker-compose一些常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose一些常用命令"}},[t._v("#")]),t._v(" docker-compose一些常用命令")]),t._v(" "),s("ul",[s("li",[t._v("部署一个应用 docker-compose up -d   (-d 表示后台运行)")]),t._v(" "),s("li",[t._v("停止容器，但不会删除他们  docker-compose stop")]),t._v(" "),s("li",[t._v("删除已停止的容器 docker-compose rm")]),t._v(" "),s("li",[t._v("重启已停止的容器 docker-compose restart")]),t._v(" "),s("li",[t._v("查看容器 docker-compose ps")]),t._v(" "),s("li",[t._v("停止并删除运行的容器 docker-compose down")])]),t._v(" "),s("h1",{attrs:{id:"docker的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker的安装"}},[t._v("#")]),t._v(" docker的安装.")]),t._v(" "),s("p",[t._v("参考docker的安装教程"),s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接地址"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"_1-安装所需的依赖包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装所需的依赖包"}},[t._v("#")]),t._v(" 1.安装所需的依赖包")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install -y yum-utils device-mapper-persistent-data lvm2\n")])])]),s("h3",{attrs:{id:"_2-使用以下命令来设置稳定的存储库。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用以下命令来设置稳定的存储库。"}},[t._v("#")]),t._v(" 2.使用以下命令来设置稳定的存储库。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 安装 docker 官方的镜像源\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 如果在国内，安装阿里云的镜像\n yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),s("h3",{attrs:{id:"_3-安装最新版本的docker-engine-community和containerd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装最新版本的docker-engine-community和containerd"}},[t._v("#")]),t._v(" 3.安装最新版本的Docker Engine-Community和containerd")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo yum install docker-ce docker-ce-cli containerd.io\n")])])]),s("h3",{attrs:{id:"_4-查看docker信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看docker信息"}},[t._v("#")]),t._v(" 4.查看docker信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker --version\n")])])]),s("h3",{attrs:{id:"_5-docker一些常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker一些常用命令"}},[t._v("#")]),t._v(" 5.docker一些常用命令")]),t._v(" "),s("ol",[s("li",[t._v("构建一个vuenginxcontainer的镜像")])]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker  build  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t  vuenginxcontainer .\n")])])]),s("p",[t._v("2.以镜像(vuenginxcontainer)启动一个容器(vueApp),容器端口为80,外网访问地址8081")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name vueApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 vuenginxcontainer\n")])])]),s("p",[t._v("3.停止容器")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker stop vueApp\n")])])]),s("p",[t._v("4.重启容器")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker restart vueApp\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("查看运行中的容器")])]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("docker ps\n")])])]),s("p",[t._v("6.查看所有的容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker ps -a\n")])])]),s("p",[t._v("7.删除容器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker rm 容器名称/id\n")])])]),s("p",[t._v("8.删除镜像")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker rmi 镜像id\n")])])]),s("p",[t._v("9.查看vueApp容器的日志")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker logs vueApp\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 加入拉取一个 node:alpine 的镜像\ndocker pull node:alpine\n# -t node-base:10: 镜像以及版本号\n# .: 指当前路径\ndocker build -t node-base:10 .\n# 查看所有的镜像\ndocker images\n# \n")])])]),s("h3",{attrs:{id:"_6-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-dockerfile"}},[t._v("#")]),t._v(" 6.Dockerfile")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" package.json package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json /code/\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("production\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" npm start\n")])])]),s("h4",{attrs:{id:"from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[t._v("#")]),t._v(" FROM")]),t._v(" "),s("p",[t._v("基于一个旧有的镜像，格式如下")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" <image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AS <name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在多阶段构建时会用到")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" <image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AS <name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" ADD")]),t._v(" "),s("p",[t._v("把目录，或者 url 地址文件加入到镜像的文件系统中")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("chown=<user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" <src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v(" <dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),s("h4",{attrs:{id:"run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[t._v("#")]),t._v(" RUN")]),t._v(" "),s("p",[t._v("执行命令，由于 ufs 的文件系统，它会在当前镜像的顶层新增一层")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" <command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[t._v("#")]),t._v(" 容器")]),t._v(" "),s("p",[t._v("镜像与容器的关系，类似于代码与进程的关系。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("docker run")]),t._v(" 创建容器")]),t._v(" "),s("li",[s("code",[t._v("docker stop")]),t._v(" 停止容器")]),t._v(" "),s("li",[s("code",[t._v("docker rm")]),t._v(" 删除容器")])]),t._v(" "),s("h3",{attrs:{id:"创建容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[t._v("#")]),t._v(" 创建容器")]),t._v(" "),s("p",[t._v("基于 "),s("code",[t._v("nginx")]),t._v(" 镜像创建一个最简单的容器：启动一个最简单的 http 服务\n使用 "),s("code",[t._v("docker run")]),t._v(" 来启动容器，"),s("code",[t._v("docker ps")]),t._v(" 查看容器启动状态")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("$ docker run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name nginx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 8888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80 nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine\n\n$ docker ps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("l\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n404e88f0d90c        nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx -g \'daemon of…"')]),t._v("   4 minutes ago       Up 4 minutes        0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("80/tcp     nginx\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n")])])]),s("p",[t._v("其中:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-d")]),t._v(": 启动一个 "),s("code",[t._v("daemon")]),t._v(" 进程")]),t._v(" "),s("li",[s("code",[t._v("--name")]),t._v(": 为容器指定名称")]),t._v(" "),s("li",[s("code",[t._v("-p host-port:container-port")]),t._v(": 宿主机与容器端口映射，方便容器对外提供服务")]),t._v(" "),s("li",[s("code",[t._v("nginx:alpine")]),t._v(": 基于该镜像创建容器")])]),t._v(" "),s("h3",{attrs:{id:"容器管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器管理"}},[t._v("#")]),t._v(" 容器管理")]),t._v(" "),s("p",[t._v("docker ps 列出所有容器")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[t._v("$ docker ps\nCONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                    NAMES\n404e88f0d90c        nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx -g \'daemon of…"')]),t._v("   4 minutes ago       Up 4 minutes        0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("80/tcp     nginx\n498e7d74fb4f        nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx -g \'daemon of…"')]),t._v("   7 minutes ago       Up 7 minutes        80/tcp                   lucid_mirzakhani\n2ce10556dc8f        redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("4.0.6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker-entrypoint.s…"')]),t._v("   2 months ago        Up 2 months         0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("6379/tcp   apolloserverstarter_redis_1\n")])])]),s("h2",{attrs:{id:"如何使用-docker-部署前端项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-docker-部署前端项目"}},[t._v("#")]),t._v(" 如何使用 docker 部署前端项目")]),t._v(" "),s("p",[t._v("Docker 变得越来越流行，它可以轻便灵活地隔离环境，进行扩容，运维管理。对于业务开发者而言，随着持续集成的发展，对代码质量及快速迭代的要求也越来越高。")]),t._v(" "),s("p",[t._v("对于前端而言，在 CI 环境中使用也更容易集成开发，测试与部署。比如可以为流水线(Pipeline)设置 Lint/Test/Security/Audit/Deploy/Artifact 等任务，更好地把控项目质量。")]),t._v(" "),s("p",[t._v("现在无论是前端，后端还是运维，都很强调 "),s("code",[t._v("devops")]),t._v(" 的理念，接下来我将会写一系列关于 "),s("code",[t._v("devops")]),t._v(" 在前端中应用的文章。你可以在我的博客 "),s("a",{attrs:{href:"https://github.com/shfshanyue/blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/shfshanyue/blog"),s("OutboundLink")],1),t._v(" 中或者我的公众号 【全栈成长之路】中订阅更多文章。")]),t._v(" "),s("p",[t._v("这里将介绍如何使用 Docker 部署前端应用，千里之行，始于足下。始于足下的意思就是，先让它能够跑起来。")]),t._v(" "),s("h3",{attrs:{id:"先让它跑起来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先让它跑起来"}},[t._v("#")]),t._v(" 先让它跑起来")]),t._v(" "),s("p",[t._v("首先，简单介绍一下一个典型的前端应用部署流程")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("npm install")]),t._v(", 安装依赖")]),t._v(" "),s("li",[s("code",[t._v("npm run build")]),t._v("，编译，打包，生成静态资源")]),t._v(" "),s("li",[t._v("服务化静态资源，如 nginx")])]),t._v(" "),s("p",[t._v("介绍完部署流程后，简单写一个 Dockerfile")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表生产环境")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PROJECT_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 许多 package 会根据此环境变量，做出不同的行为")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 另外，在 webpack 中打包也会根据此环境变量做出优化，但是 create-react-app 在打包时会写死该环境变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install && npm run build && npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("g http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server ./public "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 80\n")])])]),s("p",[t._v("现在这个前端服务已经跑起来了，接下来你可以完成部署的其它阶段了。")]),t._v(" "),s("p",[t._v("一般情况下，以下就成了运维的工作了，不过，拓展自己的知识边界总是没错的。其它阶段介绍如下")]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("nginx")]),t._v(" 或者 "),s("code",[t._v("traefik")]),t._v(" 做反向代理。在我内部集群中使用了 "),s("code",[t._v("traefik")]),t._v("，详见 "),s("a",{attrs:{href:"https://github.com/shfshanyue/op-note/blob/master/traefik.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("traefik 简易入门"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("kubernetes")]),t._v(" 或者 "),s("code",[t._v("docker compose")]),t._v(" 做容器编排。在我内部集群中使用了 "),s("code",[t._v("compose")]),t._v("，详见 "),s("a",{attrs:{href:"https://github.com/shfshanyue/op-note/blob/master/traefik-compose.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker compose 简易入门"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("gitlab ci")]),t._v("，"),s("code",[t._v("drone ci")]),t._v(" 或者 "),s("code",[t._v("github actions")]),t._v(" 等做 CI/CD 自动部署。在我内部集群中使用了 "),s("code",[t._v("github actions")]),t._v("，详见 "),s("a",{attrs:{href:"https://github.com/shfshanyue/op-note/blob/master/github-action-guide.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("github actions 简易入门"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("这时镜像存在两个问题，导致每次部署时间过长，不利于产品的快速交付，没有快速交付，也就没有敏捷开发 (Agile)")]),t._v(" "),s("ul",[s("li",[t._v("构建镜像时间过长")]),t._v(" "),s("li",[t._v("构建镜像大小过大，多时甚至 1G+")])]),t._v(" "),s("h3",{attrs:{id:"利用镜像缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用镜像缓存"}},[t._v("#")]),t._v(" 利用镜像缓存")]),t._v(" "),s("p",[t._v("我们注意到，相对于项目的源文件来讲，"),s("code",[t._v("package.json")]),t._v(" 是相对稳定的。如果没有新的安装包需要下载，则再次构建镜像时，无需重新构建依赖。则可以在 npm install 上节省一半的时间。")]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("ADD")]),t._v(" 来讲，如果需要添加的文件内容的 "),s("code",[t._v("checksum")]),t._v(" 没有发生变化，则可以利用缓存。把 "),s("code",[t._v("package.json/package-lock.json")]),t._v(" 与源文件分隔开写入镜像是一个很好的选择。目前，如果没有新的安装包更新的话，可以节省一半时间")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PROJECT_ENV production\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http-server 不变动也可以利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("g http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次添加此两个文件，充分利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" package.json package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("production\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server ./public "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 80\n")])])]),s("p",[t._v("关于利用缓存有更多细节，需要特别注意一下。如 "),s("code",[t._v("RUN git clone <repo>")]),t._v("，如果命令字符串没有更新，则将使用缓存，当命令是非幂等性时，这将有可能导致问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("关于缓存及可能导致的问题，可以参考我的文章 "),s("a",{attrs:{href:"https://shanyue.tech/op/dockerfile-practice.html#%E5%85%85%E5%88%86%E5%88%A9%E7%94%A8%E6%9E%84%E5%BB%BA%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfile 最佳实践"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"ci-环境下的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ci-环境下的优化"}},[t._v("#")]),t._v(" CI 环境下的优化")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PROJECT_ENV production\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http-server 不变动也可以利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("g http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次添加此两个文件，充分利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" package.json package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm ci\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server ./public "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p 80\n")])])]),s("p",[t._v("在 CI 环境下主要做了一点改动：使用 "),s("code",[t._v("npm ci")]),t._v(" 代替 "),s("code",[t._v("npm i")]),t._v("，经实验，"),s("code",[t._v("npm ci")]),t._v(" 可以减少将近一半的的依赖安装时间。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nadded "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1154")]),t._v(" packages "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 60s\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" ci\nadded "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1154")]),t._v(" packages "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 35s\n")])])]),s("p",[t._v("另外，当 "),s("code",[t._v("package.json")]),t._v(" 与 "),s("code",[t._v("package-lock.json")]),t._v(" 版本不匹配时，"),s("code",[t._v("npm ci")]),t._v(" 将会报出异常，提前检测出不安全信息，及早发现问题，及早解决问题。")]),t._v(" "),s("p",[t._v("关于安装依赖速度的优化，可以参考我以前的文章 "),s("a",{attrs:{href:"https://shanyue.tech/frontend-engineering/npm-install.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端高级进阶：在生产环境中使你的 npm i 速度提升 50%"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"多阶段构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多阶段构建"}},[t._v("#")]),t._v(" 多阶段构建")]),t._v(" "),s("p",[t._v("得益于缓存，现在镜像构建时间已经快了不少。但是，此时镜像的体积依旧过于庞大，这也将会导致部署时间的加长。原因如下")]),t._v(" "),s("p",[t._v("考虑下每次 CI/CD 部署的流程")]),t._v(" "),s("ol",[s("li",[t._v("在构建服务器 (Runer) 构建镜像")]),t._v(" "),s("li",[t._v("把镜像推至镜像仓库服务器")]),t._v(" "),s("li",[t._v("在生产服务器拉取镜像，启动容器")])]),t._v(" "),s("p",[t._v("显而易见，镜像体积过大会在前两步上传及下载时造成传输效率低下，增加每次部署的延时。")]),t._v(" "),s("p",[t._v("即使，构建服务器与生产服务器在同一节点下，没有延时的问题 (基本没可能)。减少镜像体积也能够节省磁盘空间。")]),t._v(" "),s("p",[t._v("关于镜像体积的过大，完全是因为node_modules 臭名昭著的体积:")]),t._v(" "),s("p",[t._v("但最后我们只需要构建生成的静态资源，对于源文件以及 "),s("code",[t._v("node_modules")]),t._v(" 下文件，占用体积过大且不必要，造成浪费。")]),t._v(" "),s("p",[t._v("此时可以利用 Docker 的多阶段构建，仅来提取编译后文件，即打包生成的静态资源，对 Dockerfile 做一改进")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine as builder\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PROJECT_ENV production\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http-server 不变动也可以利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" package.json package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm ci\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择更小体积的基础镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=builder /code/public /usr/share/nginx/html\n")])])]),s("p",[t._v("此时，镜像体积从 1G+ 变成了 50M+。若此时的部署仅仅是在测试环境或者多分支环境下为了方便测试，那就大功告成，完美解决问题了。")]),t._v(" "),s("h3",{attrs:{id:"使用对象存储服务-oss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用对象存储服务-oss"}},[t._v("#")]),t._v(" 使用对象存储服务 (OSS)")]),t._v(" "),s("p",[t._v("分析一下 50M+ 的镜像体积，"),s("code",[t._v("nginx:10-alpine")]),t._v(" 的镜像是16M，剩下的40M是静态资源。生产环境的静态资源往往会在独立域名上维护，并使用 CDN 进行加速。")]),t._v(" "),s("p",[s("strong",[t._v("如果把静态资源给上传到文件存储服务，即OSS，并使用 CDN 对 OSS 进行加速，则没有必要打入镜像了。而在生产环境下也有对静态资源上 CDN 的强烈需求。")])]),t._v(" "),s("p",[t._v("此时镜像大小会控制在 20M 以下。虽然极大地减小了镜像体积，但是它会增加复杂度与增加镜像构建时间(如上传到OSS)，对于测试环境或者分支环境没必要使用 OSS。")]),t._v(" "),s("p",[t._v("关于静态资源，可以分类成两部分：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/build")]),t._v("，此类文件在项目中使用 require/import 引用，会被 webpack 打包并加 hash 值，并通过 publicPath 修改资源地址。可以把此类文件上传至 oss，并加上永久缓存，不需要打入镜像")]),t._v(" "),s("li",[s("code",[t._v("/static")]),t._v("，此类文件在项目中直接引用根路径，直接打入镜像，如果上传至 OSS 可能增加复杂度 (批量修改 publicPath)")])]),t._v(" "),s("p",[t._v("此时通过一个脚本命令 "),s("code",[t._v("npm run uploadOss")]),t._v("，来把静态资源上传至 OSS。更新后的 Dockerfile 如下")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine as builder\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PROJECT_ENV production\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" NODE_ENV production\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http-server 不变动也可以利用缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /code\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" package.json package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json /code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm ci\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /code\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run uploadOss 是把静态资源上传至 oss 上的脚本文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build && npm run uploadOss\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择更小体积的基础镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=builder code/public/index.html code/public/favicon.ico /usr/share/nginx/html/\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=builder code/public/static /usr/share/nginx/html/static\n")])])]),s("ul",[s("li",[s("font",{attrs:{size:"2"}},[t._v("以上参考链接："),s("a",{attrs:{href:"https://shanyue.tech/op/deploy-fe-with-docker.html#%E5%85%88%E8%AE%A9%E5%AE%83%E8%B7%91%E8%B5%B7%E6%9D%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://shanyue.tech/op/deploy-fe-with-docker.html#%E5%85%88%E8%AE%A9%E5%AE%83%E8%B7%91%E8%B5%B7%E6%9D%A5"),s("OutboundLink")],1)])],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);